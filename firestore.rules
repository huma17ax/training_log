rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId}/trainingRecords/{recordId} {
      // ユーザーが認証済みで、自分のデータにのみアクセス可能
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;

      // データの検証ルール
      function isValidTrainingRecord() {
        let data = request.resource.data;
        return 
          data.userId == request.auth.uid &&
          data.date is timestamp &&
          (
            // ランニングの場合
            (data.type == 'running' &&
              data.level is number && data.level > 0 &&
              data.time is number && data.time > 0 &&
              data.speed is number && data.speed > 0
            ) ||
            // ウェイトトレーニングの場合
            (
              (data.type in ['legPress', 'chestPress', 'latPulldown', 'abdominal']) &&
              data.weight is number && data.weight > 0 &&
              data.reps is number && data.reps > 0 &&
              data.sets is number && data.sets > 0
            )
          );
      }

      // 作成時のバリデーション
      allow create: if request.auth != null && 
                     request.auth.uid == userId && 
                     isValidTrainingRecord();

      // 更新時のバリデーション
      allow update: if request.auth != null && 
                     request.auth.uid == userId && 
                     isValidTrainingRecord();
    }

    match /users/{userId}/nextGoals/{type} {
      // ユーザーが認証済みで、自分の設定にのみアクセス可能
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;

      // 種目の検証
      function isValidTrainingType() {
        return request.params.type in ['running', 'legPress', 'chestPress', 'latPulldown', 'abdominal'];
      }

      // データの検証ルール
      function isValidNextGoal() {
        let data = request.resource.data;
        return
          data.value in ['increase', 'maintain', 'decrease', null] &&
          data.updatedAt is timestamp;
      }

      // 作成・更新時のバリデーション
      allow create, update: if request.auth != null && 
                             request.auth.uid == userId && 
                             isValidTrainingType() &&
                             isValidNextGoal();
    }
  }
}